define game{
	game_name: "Tiny War";
	num_of_players: 4;
	maximum_round: 10;
}

define cards[
	Card Attack{
		value: 1;
		method(Player dealer){
		
			Player target = waitForTarget(dealer);
			if(target == null){
				return false;
			}
		
			sendToOnePlayer(target, "You are attacked by Player " + dealer.id + ", please put a Dodge, otherwise you will lose one HP point.");
			Card c = putCard(target);		
			while( c!=null && !(c is Dodge) ){
				target.handCards.add(c);
				c = putCard(target);
			}
		
			if(c == null){  
				target.character.HP = target.character.HP-1;
				if(target.character.HP == 0){
					dying();
				}
			}
			else{
				droppedCardStack.add(c);
			}
			return true;
			
		}
	}

	Card Dodge{
		value: 2;
		method(Player dealer){
			return;
		} 
	}

	Card FirstAid{
		value: 3;
		method(Player dealer){
			dealer.character.HP = dealer.character.HP+1;
			return true;
		}
	}
	
	Card Diligenra{
		value: 4;
		method(Player dealer){
			drawCard(dealer, 2);
			return true;
		}
	}
]

define characters[
	Doctor{
	
		HP: 2;
		skill :[
			Heal{
				
				method(Player dealer){
					Player target = waitForTarget(dealer);
					if(target == null)
						{return false;}
					target.character.HP = target.character.HP+2;
					return true;
				}
			}
		]
	}
	
	Vampire{
		HP: 3;
		skill: [
			Leech{
				method(Player dealer){
					Player target = waitForTarget(dealer);
					if(target == null){
						return false;
					}
					target.character.HP = target.character.HP-1;
					if(target.character.HP == 0){
						dying();
					}
					dealer.character.HP = dealer.character.HP+1;
					return true;
				}	
			}
		]
	}
	
	Gambler{
		HP: 3;
		skill: [
			Gamble{
				method(Player dealer){
					int i = 0;
					foreach (Card card in dealer.handCards){
						droppedCardStack.add(card);
						i = i+1;
					}
					dealer.handCards.clear();
					
					drawCard(dealer, i);
					return true;
				}
			}
		]
	}
]


init{
	int i = 0;
	while(i<40){
		cardStack.add(Attack);
		i=i+1;
	}
	i=0;
	while(i<10){
		cardStack.add(Dodge);
		cardStack.add(FirstAid);
		i=i+1;
	}

	i=0;
	while(i<5){
		cardStack.add(Diligenra);
		i=i+1;
	}
	shuffle(cardStack);

	Player p0 = playerList.get(0);
	p0.setCharacter(Doctor);

	Player p1 = playerList.get(1);
	p1.setCharacter(Vampire);

	Player p2 = playerList.get(2);
	p2.setCharacter(Vampire);

	Player p3 = playerList.get(3);
	p3.setCharacter(Gambler);

	foreach (Player player in playerList){
		drawCard(player, 4);
	}
	
}

round{

	round_begin{
			
	void		
		
	}
	
	turn{
		
		if(player.character.HP <= 0)
			{return;}
		
		drawCard(player,2);
		sendToOnePlayer(player, GameGeneralInfo());
		bool flag = true;
		bool firstSkill = true;
	
		while(flag){
			int mode = waitForChoice(player, "Please input the number:\n1:skill  2:card  3:end", 3);
		
			if(mode == 1){
				if(firstSkill && waitForSkill(player))
					{firstSkill = false;}
				
			}else
			{if(mode == 2){
				Card c = putCard(player);

				if(c != null){

					if(c.method(player)){

						droppedCardStack.add(c);

					}
					else{

						player.handCards.add(c);
					}
				}
				
			}else{
				flag = false;
			}
			}

		}
	}

	round_end{
		void
	}
}

dying{
	int numOfAlive = 0;
	Player alivePlayer = null;
	
	foreach (Player player in playerList){
		if(player.character.HP > 0){
			numOfAlive = numOfAlive + 1;
			alivePlayer = player;
		}
	}
	if(numOfAlive == 1){
		broadcast("Player"+alivePlayer.id+" wins!!");
		broadcast("Others lose");
		gameover = true;
	}
}
